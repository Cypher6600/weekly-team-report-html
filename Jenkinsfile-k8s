pipeline {
    agent {
        kubernetes {
            yaml '''
        apiVersion: v1
        kind: Pod
        spec:
          containers:
          - name: node
            image: node:16.13.1-alpine
            command:
            - cat
            tty: true
          - name: terraform
            image: hashicorp/terraform:latest
            command:
            - cat
            tty: true
          - name: cli
            image: amazon/aws-cli
            command:
            - cat
            tty: true
          - name: jdk
            image: openjdk:11
            command:
            - cat
            tty: true
        '''
        }
    }
    stages {
            stage('prep') {
                steps {
                git url: 'https://github.com/Cypher6600/weekly-team-report-html.git', branch: 'develop-team-1'
                }
            }
            stage('node') {
            steps {
                    container('node') {
                        sh 'npm install'
                        sh 'npm run build'
                    }
            }
            }

            stage('sonar-scanner') {
                steps {
                    container('jdk') {
                    script {
                            def sonarqubeScannerHome = tool name: 'sonar', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
                            withCredentials([string(credentialsId: 'sonar', variable: 'sonarLogin')]) {
                            sh "${sonarqubeScannerHome}/bin/sonar-scanner -e -Dsonar.host.url=http://54.244.190.241:30300 -Dsonar.login=${sonarLogin} -Dsonar.projectName=WebApp -Dsonar.projectVersion=${env.BUILD_NUMBER} -Dsonar.projectKey=GS -Dsonar.sources=src/ -Dsonar.language=js" }
                    }
                    }
                }
            }

        stage('terraform') {
                steps {
                    container('terraform') {
                    dir('./terraform') {
                        sh 'terraform init'
                        sh 'terraform plan'
                        sh 'terraform apply --auto-approve'
                    }
                    }
                }
        }

            stage('cli') {
                steps {
                    container('cli') {
                    sh 'aws s3 cp dist s3://trogaev-bucket-lab/ --recursive'
                    }
                }
            }
    }
}

